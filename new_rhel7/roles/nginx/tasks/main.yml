---
- name: Set datadir root
  set_fact:
    fact_nginx_datadir={% if not server_enable_lvm %}/var/www{% else %}{{ nginx_lvm_lv_mountpoint }}{% endif %}
  delegate_to: 127.0.0.1

# Handle nginx filesystem and LVM
- name: create lvm for nginx
  lvol:
    vg="{{ nginx_lvm_vg_name }}"
    lv="{{ nginx_lvm_lv_name }}"
    size={{ nginx_lvm_lv_size }}
    state=present
  when: server_enable_lvm

- name: ensure nginx root folder
  file:
    dest="{{ fact_nginx_datadir }}"
    owner=root
    group=root
    state=directory

- name: make filesystem for nginx
  filesystem:
    fstype="{{ nginx_lvm_lv_fstype | default('xfs') }}"
    dev="/dev/{{ nginx_lvm_vg_name }}/{{ nginx_lvm_lv_name }}"
  when: server_enable_lvm

- name: mount nginx root folder
  mount:
    name="{{ fact_nginx_datadir }}"
    src="/dev/{{ nginx_lvm_vg_name }}/{{ nginx_lvm_lv_name }}"
    fstype="{{ nginx_lvm_lv_fstype | default('xfs') }}"
    opts="{{ nginx_lvm_lv_mountpoint_options | default('') | replace(';',',') }}"
    state=mounted
  when: server_enable_lvm

- name: Register nginx version
  set_fact:
    nginx_template_version="{{ nginx_version }}"
  delegate_to: 127.0.0.1

# Use Nginx.org nginx repo
- name: Ensure Nginx repo is present
  yum:
    name=http://nginx.org/packages/centos/{{ ansible_distribution_major_version }}/noarch/RPMS/nginx-release-centos-{{ ansible_distribution_major_version }}-0.el{{ ansible_distribution_major_version }}.ngx.noarch.rpm
    state=present
  when: 
    ansible_os_family == "RedHat" and ansible_distribution != "Amazon"

# Ensure package
- name: ensure nginx is installed (latest)
  yum:
    name=nginx
    state=present

- name: Ensure nginx start at boot
  service:
    name=nginx
    enabled=yes

# Nginx config, default log file and zabbix monitoring
- name: Ensure nginx configuration
  template:
    src="{{ nginx_template_version }}/nginx.conf.j2"
    dest="/etc/nginx/nginx.conf"
    owner=root
    group=root
    mode=0644
  notify:
    - restart nginx

- name: ensure nginx monitoring configuration
  template:
    src="{{ nginx_template_version }}/zabbix.conf.j2"
    dest="/etc/nginx/conf.d/zabbix.conf"
    owner=root
    group=root
    mode=0644
  notify:
    - restart nginx

- name: ensure zabbix vhost log folder and create zabbix log folder
  file:
    dest=/var/log/nginx/zabbix
    owner=root
    group=root
    state=directory
- name: Remove the default config file for vhost
  file:
    dest=/etc/nginx/conf.d/default.conf
    state=absent
  notify:
    - restart nginx

# Handle nginx vhosts - config, log folder, data folder
- name: ensure nginx vhost configuration
  template:
    src="{{ nginx_template_version }}/vhost.conf.j2"
    dest="/etc/nginx/conf.d/{{ item.domain }}.conf"
    owner=root
    group=root
    mode=0644
  with_items:
    "{{ nginx_vhosts }}"
  notify:
    - restart nginx

- name: ensure vhost log folder and create log folder
  file:
    dest="/var/log/nginx/{{ item.domain }}"
    owner=root
    group=root
    state=directory
  with_items:
    "{{ nginx_vhosts }}"

- name: ensure vhost data folder and create data folder
  file:
    dest="{{ fact_nginx_datadir }}/sites/{{ item.domain }}"
    owner=root
    group=root
    state=directory
  with_items:
    "{{ nginx_vhosts }}"

- name: ensure 404 error page is configured
  copy:
    src=404.html.j2
    dest="/usr/share/nginx/html/404.html"

- name: ensure 5xx error page is configured
  copy:
    src=50x.html.j2
    dest="/usr/share/nginx/html/5xx.html"

# Ensure logrotate
- name: Ensure logrotate is properly set for nginx
  template:
    src="{{ nginx_template_version }}/nginx.logrotate.j2"
    dest=/etc/logrotate.d/nginx
    owner=root
    group=root
    mode=0644

# Make it run!
- name: Ensure nginx is running
  service:
    name=nginx
    state=started
