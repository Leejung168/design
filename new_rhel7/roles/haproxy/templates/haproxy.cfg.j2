#---------------------------------------------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------------------------------------------
global
    # [ Process management and security ]

    # - make it very hard for the attacker to exploit the system
    chroot      /usr/share/haproxy

    log         127.0.0.1 local3 info

    daemon
    user        haproxy
    group       haproxy
    pidfile     /var/run/haproxy.pid

    # - Number of processes
    nbproc      1

    # - easy for use socat for zabbix
    stats socket  /tmp/haproxy level admin

    # - default is 10
    stats maxconn 20

    # - for HA , easily know which server is working
    node        master_loadbalance1

    # - insert to the status page
    description {{ ansible_hostname }}

    # [ Performance tuning ]
    maxconn     {{ haproxy_maxconnection | default ('655360') }}

    # - see also "option splice-auto", which easier, most versions between
    #   2.6.25 and 2.6.28 are buggy and will forward corrupted data
    nosplice

    # - it becomes possible to add
    #   some randomness in the check interval between 0 and +/- 50%. A value between
    #   2 and 5 seems to show good results. The default value remains at 0.
    spread-checks 3

    # - higher values allow some applications with very large cookies to work. The default value is 16384 and
    #   can be changed at build time. It is strongly recommended not to change this from the default value
    # tune.bufsize

    # [ Debugging ]

    # - Enables debug mode which dumps to stdout all exchanges, and disables forking
    #   into background. It is the equivalent of the command-line argument "-d". It
    #   should never be used in a production configuration since it may prevent full
    #   system startup.
    # debug

    # - Do not display any message during startup. It is equivalent to the command-
    #   line argument "-q".
    # quiet

defaults
    # --------------------------------------------
    # - CNC recommend setting
    # --------------------------------------------
    option httpchk  GET /nginx_status

    log         global

    option abortonclose
    no option accept-invalid-http-response
    option allbackups

    # option http-server-close
    # option httplog

    option log-health-checks
    option tcp-smart-connect
    option tcpka

    # - Specifying "option redispatch" will allow the proxy to break their
    #   persistence and redistribute them to a working server.
    option redispatch

    #option forwardfor except 127.0.0.1

    retries 3

    timeout check 60s
    timeout connect 60s
    timeout http-keep-alive 60s
    timeout http-request 60s
    timeout queue 60s
    timeout server 60s
    timeout tarpit 60s

{% for f in haproxy_frontends %}
frontend {{ f.name }} {{ f.bind }}:{{ f.port }}
    mode {{ f.mode }}
    maxconn {{ f.maxconn }}

    no option accept-invalid-http-request
    option http-server-close

    log         global
    no option dontlognull
    option httplog
    option log-separate-errors

    # - Specifying "option redispatch" will allow the proxy to break their
    #   persistence and redistribute them to a working server.
    #option forwardfor except 127.0.0.1 header X-Real-IP
    option forwardfor except 127.0.0.1

    timeout http-keep-alive 60s
    timeout http-request 60s
    timeout client  60s
    timeout tarpit  60s

    acl path_web_inf     path_beg       -i    /WEB-INF
    http-request deny if path_web_inf

    #-------------------------------------------------------------------------
    # filter example
    #-------------------------------------------------------------------------
    #acl url_example     hdr_dom(host) www.example.com

    #acl path_user path_beg  -i /user
    #acl path_admin path_beg  -i /admin

    # redirect for www.example.com
    #redirect code 301 prefix  http://www.chinanetcloud.com if url_example !path_user

    #use_backend admin        if url_example path_admin

    #--------------------------------------------------------------------------
    # Other URLs ,go to default example:8181
    #--------------------------------------------------------------------------
    #use_backend www-pool1     if url_example
    default_backend            {{ f.default_backend }}

{% endfor %}

{% for b in haproxy_backends %}

backend {{ b.name }}
    mode {{ b.mode }}
    balance {{ b.balance }}

    cookie  SERVERID insert indirect
    http-check disable-on-404
    http-check send-state

    #-----------------------------------------
    # add /suburi ,if there is not in the URL
    #-----------------------------------------
    #acl path_suburi     path_beg       /suburi
    #reqirep ^([^\ ]*)\ (.*) \1\ /suburi/\2 if !path_suburi

    option httpchk  GET /nc_check.php HTTP/1.1\r\nHost:\ example.com
    default-server inter 2s fastinter 1s downinter 5s slowstart 60s rise 2 fall 5 weight 30

    {% for s in haproxy_servers %}
    server  {{ s.name }} {{ s.host }}:{{ s.port | default('80') }} cookie {{ s.name }} check maxconn 2000
    {% endfor %}

{% endfor %}

listen monitor1 0.0.0.0:10443
    mode http

    stats enable
    stats uri /nc-haproxy              # - default is haproxy?stats
    stats realm Haproxy\ statistics    # - Enable statistics and set authentication realm
    stats show-desc example {{ ansible_hostname }} status page
    stats auth ncadmin:ChinaNetCloud
    stats refresh 30s
    stats show-legends                 # - Enable reporting additional informations on the statistics page

    timeout check 10s
    timeout client 45s
    timeout connect 45s
    timeout http-keep-alive 45s
    timeout http-request 45s
    timeout queue 45s
    timeout server 45s
    timeout tarpit 45s
