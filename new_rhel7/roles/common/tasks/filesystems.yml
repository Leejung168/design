# Manage filesystems / LVM / mount points / etc.

# Refer to:
# http://docs.ansible.com/list_of_system_modules.html
#
# LVM:
#    http://docs.ansible.com/lvg_module.html
#    http://docs.ansible.com/lvol_module.html
# FS:
#    http://docs.ansible.com/filesystem_module.html
# Mount:
#    http://docs.ansible.com/mount_module.html
---
# Check LVM2 tool installed
- name: Ensure LVM2 tool installed on the server
  yum: 
    name=lvm2
    state=present

# - name: Ensure LVM configuration is correct (umask)
#   lineinfile: 
#     dest=/etc/lvm/lvm.conf
#     regexp='umask = 077'
#     line='    umask = 022'
#     state=present

# Loop through the VGs defined in the config
- name: Create LVM volume groups
  lvg:  
    vg={{ item.name }}
    pvs={{ item.device }}
  with_items:
    "{{ vgs | default([]) }}"
  when: server_enable_lvm

# Loop through the LVs defined in the config
# And create:
#  - create LV
#  - create Filesystem
#  - create mount point
#  - mount filesystem
- name: Create LVM logical volumes
  lvol:
    vg={{ vgs[0].name }}
    lv={{ item.name }}
    size={{ item.size }}
  with_items:
    "{{ lvs | default([]) }}"
  when: server_enable_lvm

- name: Create filesystems on LVM logical volumes
  filesystem:
    fstype={{ item.type }}
    dev=/dev/{{ vgs[0].name }}/{{ item.name }}
  when:
    server_enable_lvm and item.type | lower != 'swap'
  with_items:
    "{{ lvs | default([]) }}"

- name: Ensure LVM mount points exist
  file:
    state=directory
    name={{ item.mount }}
  when:
    server_enable_lvm and item.type | lower != 'swap'
  with_items:
    "{{ lvs | default([]) }}"

- name: Mount LVM LV partitions
  mount: 
    name={{ item.mount }}
    src=/dev/{{ vgs[0].name }}/{{ item.name }}
    fstype={{ item.type }}
    opts={{ item.options }}
    state=mounted
  when:
    server_enable_lvm and item.type | lower != 'swap'
  with_items:
    "{{ lvs | default([]) }}"

# Ensure the /opt/backup endpoint exists no matter what and is owned by ncbackup user
- name: Ensure /opt/backup exists and owned by ncbackup user
  file:
    name=/opt/backup
    state=directory
    owner=ncbackup
    group=ncbackup


###############################
# Handle swap partitons
###############################

# First, make sure swap is not in use
# Because kickstart may already create swap
# Later, this can be removed, as we fix kickstart
- name: Turn swap off before making changes
  command: 
    swapoff -a

# Make swap
- name: Make swap "filesystems"
  shell: 
    creates=/root/swap_created
    mkswap /dev/{{ vgs[0].name }}/{{ item.name }} && touch /root/swap_created
  when:
    server_enable_lvm and item.type | lower == 'swap'
  with_items:
    "{{ lvs | default([]) }}"
# Add swap info to fstab
- name: Add SWAP partitions to fstab
  lineinfile: 
    dest=/etc/fstab
    regexp="swap"
    line="/dev/{{ vgs[0].name }}/{{ item.name }}    swap    swap    defaults    0 0"
    state=present
  when:
    server_enable_lvm and item.type | lower == 'swap'
  with_items:
    "{{ lvs | default([]) }}"

- name: Turn swap on
  command: 
    swapon -a
