---
#
# This playbook modifies the interface name
# It is for Dom0 only, when installing a Xen server
#
# We should automatically detect if needed, based on existence of em1 / em2 interfaces
#

# Move the config files, if needed
# Creates will ensure idempotence
#
- name: Rename em -> eth (Step 1 of 2)
  command: "mv /etc/sysconfig/network-scripts/ifcfg-{{ item.old }} /etc/sysconfig/network-scripts/ifcfg-{{ item.new }}"
  args:
    removes: "/etc/sysconfig/network-scripts/ifcfg-{{ item.old }}"
    creates: "/etc/sysconfig/network-scripts/ifcfg-{{ item.new }}"
  with_items:
    - { old: em1, new: eth0 }
    - { old: em2, new: eth1 }
    - { old: em3, new: eth2 }
    - { old: em4, new: eth3 }
  when: "'{{ item.old }}' in ansible_interfaces"

# Rename device inside config file, if needed
- name: Rename em -> eth (Step 2 of 2)
  lineinfile:
    dest=/etc/sysconfig/network-scripts/ifcfg-{{ item.new }}
    state=present
    backup=yes
    regexp="^DEVICE="
    line="DEVICE={{ item.new }}"
  with_items:
    - { old: em1, new: eth0 }
    - { old: em2, new: eth1 }
    - { old: em3, new: eth2 }
    - { old: em4, new: eth3 }
  when: "'{{ item.old }}' in ansible_interfaces"

# Remove udev cache file
- name: Remove udev interface cache
  command: 'rm -rf {{ item }}'
  args:
    removes: "{{ item }}"
  with_items:
    - /etc/udev/rules.d/70-persistent-net.rules
    - /mnt/sysimage/etc/udev/rules.d/70-persistent-net.rules
  when: "'em1' in ansible_interfaces or 'em2' in ansible_interfaces"
